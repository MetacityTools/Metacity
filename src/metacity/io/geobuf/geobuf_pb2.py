# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: geobuf.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cgeobuf.proto\"\xc2\x07\n\x04\x44\x61ta\x12\x0c\n\x04keys\x18\x01 \x03(\t\x12\x12\n\ndimensions\x18\x02 \x01(\r\x12\x11\n\tprecision\x18\x03 \x01(\r\x12\x35\n\x12\x66\x65\x61ture_collection\x18\x04 \x01(\x0b\x32\x17.Data.FeatureCollectionH\x00\x12 \n\x07\x66\x65\x61ture\x18\x05 \x01(\x0b\x32\r.Data.FeatureH\x00\x12\"\n\x08geometry\x18\x06 \x01(\x0b\x32\x0e.Data.GeometryH\x00\x1a\xaa\x01\n\x07\x46\x65\x61ture\x12 \n\x08geometry\x18\x01 \x01(\x0b\x32\x0e.Data.Geometry\x12\x0c\n\x02id\x18\x0b \x01(\tH\x00\x12\x10\n\x06int_id\x18\x0c \x01(\x12H\x00\x12\x1b\n\x06values\x18\r \x03(\x0b\x32\x0b.Data.Value\x12\x16\n\nproperties\x18\x0e \x03(\rB\x02\x10\x01\x12\x1d\n\x11\x63ustom_properties\x18\x0f \x03(\rB\x02\x10\x01\x42\t\n\x07id_type\x1a\xb5\x02\n\x08Geometry\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.Data.Geometry.Type\x12\x13\n\x07lengths\x18\x02 \x03(\rB\x02\x10\x01\x12\x12\n\x06\x63oords\x18\x03 \x03(\x12\x42\x02\x10\x01\x12\"\n\ngeometries\x18\x04 \x03(\x0b\x32\x0e.Data.Geometry\x12\x1b\n\x06values\x18\r \x03(\x0b\x32\x0b.Data.Value\x12\x1d\n\x11\x63ustom_properties\x18\x0f \x03(\rB\x02\x10\x01\"}\n\x04Type\x12\t\n\x05POINT\x10\x00\x12\x0e\n\nMULTIPOINT\x10\x01\x12\x0e\n\nLINESTRING\x10\x02\x12\x13\n\x0fMULTILINESTRING\x10\x03\x12\x0b\n\x07POLYGON\x10\x04\x12\x10\n\x0cMULTIPOLYGON\x10\x05\x12\x16\n\x12GEOMETRYCOLLECTION\x10\x06\x1ap\n\x11\x46\x65\x61tureCollection\x12\x1f\n\x08\x66\x65\x61tures\x18\x01 \x03(\x0b\x32\r.Data.Feature\x12\x1b\n\x06values\x18\r \x03(\x0b\x32\x0b.Data.Value\x12\x1d\n\x11\x63ustom_properties\x18\x0f \x03(\rB\x02\x10\x01\x1a\xa3\x01\n\x05Value\x12\x16\n\x0cstring_value\x18\x01 \x01(\tH\x00\x12\x16\n\x0c\x64ouble_value\x18\x02 \x01(\x01H\x00\x12\x17\n\rpos_int_value\x18\x03 \x01(\x04H\x00\x12\x17\n\rneg_int_value\x18\x04 \x01(\x04H\x00\x12\x14\n\nbool_value\x18\x05 \x01(\x08H\x00\x12\x14\n\njson_value\x18\x06 \x01(\tH\x00\x42\x0c\n\nvalue_typeB\x0b\n\tdata_typeB\x02H\x03\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'geobuf_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'H\003'
  _DATA_FEATURE.fields_by_name['properties']._options = None
  _DATA_FEATURE.fields_by_name['properties']._serialized_options = b'\020\001'
  _DATA_FEATURE.fields_by_name['custom_properties']._options = None
  _DATA_FEATURE.fields_by_name['custom_properties']._serialized_options = b'\020\001'
  _DATA_GEOMETRY.fields_by_name['lengths']._options = None
  _DATA_GEOMETRY.fields_by_name['lengths']._serialized_options = b'\020\001'
  _DATA_GEOMETRY.fields_by_name['coords']._options = None
  _DATA_GEOMETRY.fields_by_name['coords']._serialized_options = b'\020\001'
  _DATA_GEOMETRY.fields_by_name['custom_properties']._options = None
  _DATA_GEOMETRY.fields_by_name['custom_properties']._serialized_options = b'\020\001'
  _DATA_FEATURECOLLECTION.fields_by_name['custom_properties']._options = None
  _DATA_FEATURECOLLECTION.fields_by_name['custom_properties']._serialized_options = b'\020\001'
  _DATA._serialized_start=17
  _DATA._serialized_end=979
  _DATA_FEATURE._serialized_start=204
  _DATA_FEATURE._serialized_end=374
  _DATA_GEOMETRY._serialized_start=377
  _DATA_GEOMETRY._serialized_end=686
  _DATA_GEOMETRY_TYPE._serialized_start=561
  _DATA_GEOMETRY_TYPE._serialized_end=686
  _DATA_FEATURECOLLECTION._serialized_start=688
  _DATA_FEATURECOLLECTION._serialized_end=800
  _DATA_VALUE._serialized_start=803
  _DATA_VALUE._serialized_end=966
# @@protoc_insertion_point(module_scope)
