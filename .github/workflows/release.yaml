name: Metacity Release CI

on:  
  push:
    tags: 
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.base_ref, 'release')
    steps:
    - uses: actions/checkout@v2
    - uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Prepare for dist
      run: |
        python setup.py sdist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  abort:
    runs-on: ubuntu-latest
    needs: release
    if: contains(needs.release.result, 'failure')
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo
            const { data: { id } } = await github.rest.repos.getLatestRelease({ owner, repo })
            await github.rest.repos.deleteRelease({ owner, repo, release_id: id })