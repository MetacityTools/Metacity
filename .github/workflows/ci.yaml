name: Metacity CI

on:
  push:
    branches: [ release, dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov

    - name: Build Geometry package
      run: |
        pip install .

    - name: Test with pytest
      run: |
        pytest ./tests/* --cov=metacity

    - name: Upload to Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        pip install coveralls
        coveralls


  make-wheels:
    name: Make ${{ matrix.os }} wheels
    if: github.event_name == 'push' && contains(github.ref, 'release')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest", "ubuntu-latest", "windows-latest"]
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: "Build wheels"
        uses: pypa/cibuildwheel@v2.9.0

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: "Upload wheel as artifact"
        uses: actions/upload-artifact@v3
        with:
          name: artifact-${{ matrix.os }}-wheel
          path: ./wheelhouse/*.whl


  make-sdist:
    name: Make source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        name: artifact-source-dist
        path: dist/*.tar.gz


  tag-and-release:
    name: Tag commit and create a release
    needs: [make-wheels, make-sdist]
    if: github.event_name == 'push' && contains(github.ref, 'release')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: "Get release version"
      run: |
        CURRENT_VERSION=$(python3 setup.py --version) 
        echo "Current version: $CURRENT_VERSION"
        echo "CURRENT_VERSION=v$CURRENT_VERSION" >> $GITHUB_ENV

    - uses: rickstaa/action-create-tag@v1
      with:
        tag: ${{ env.CURRENT_VERSION }}

    - uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ env.CURRENT_VERSION }}


  upload:
    name: Upload to PyPI
    needs: tag-and-release
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist

    - name: Copy artifacts to dist/ folder
      run: |
        ls dist/

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  
